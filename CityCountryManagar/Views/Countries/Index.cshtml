@using RidersApp.ViewModels
@model IEnumerable<CountryVM>
@{
    ViewData["Title"] = "Countries";
   
}

<div class="container mt-4">
    @* Display messages *@
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center mb-2">
        <h4 class="mb-0">Countries</h4>
        <div>
            <button class="btn btn-success" onclick="showInPopup('@Url.Action("AddOrEdit", "Countries")', 'Add Country')">Add New Country</button>
        </div>
    </div>

    <div id="view-all">
        <table id="countriesTable" class="table table-striped table-hover datatable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th style="width:150px;">Actions</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@Html.AntiForgeryToken()

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize DataTable with server-side processing
            $('#countriesTable').DataTable({
                processing: true,
                serverSide: true,
                language: {
                    processing: "Please wait...",
                    search: "Search:",
                    paginate: { previous: "Previous", next: "Next" }
                },
                ajax: {
                    url: '@Url.Action("GetCountriesData", "Countries")',
                    type: 'POST'
                },
                columns: [
                    { data: 'name' },
                    {
                        data: 'countryId',
                        orderable: false,
                        searchable: false,
                        render: function (data, type, row) {
                            return `
                                <a class="btn btn-sm btn-info text-white" onclick="showInPopup('@Url.Action("AddOrEdit", "Countries")?id=${data}', 'Edit Country')">Edit</a>
                                <a class="btn btn-sm btn-danger" onclick="deleteRecord('Countries', ${data})">Delete</a>
                            `;
                        }
                    }
                ],
                paging: true,
                pageLength: 25,
                lengthChange: true,
                searching: true,
                ordering: true,
                info: true,
                autoWidth: false,
                order: []
            });
        });
    </script>
}
