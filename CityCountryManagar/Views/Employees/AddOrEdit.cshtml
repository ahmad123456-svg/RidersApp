@using RidersApp.ViewModels
@using Microsoft.AspNetCore.Mvc.Rendering
@model EmployeeVM
@{
    Layout = null; 
    var cityItems = ViewBag.Cities as IEnumerable<SelectListItem>;
    bool cityHasItems = cityItems != null && cityItems.Any();
}

<form asp-action="AddOrEdit" asp-controller="Employees" method="post" onsubmit="return ajaxFormSubmit(this);">
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="FatherName"></label>
        <input asp-for="FatherName" class="form-control" />
        <span asp-validation-for="FatherName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="PhoneNo"></label>
        <input asp-for="PhoneNo" class="form-control" />
        <span asp-validation-for="PhoneNo" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Address"></label>
        <textarea asp-for="Address" class="form-control" rows="3"></textarea>
        <span asp-validation-for="Address" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CountryId" class="control-label"></label>
        <select asp-for="CountryId" class="form-control" asp-items="ViewBag.Countries" id="CountryId">
            <option value="">-- Select Country --</option>
        </select>
        <span asp-validation-for="CountryId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CityId" class="control-label"></label>
        <!-- do not inject C# into tag attributes to avoid RZ1031 -->
        <select asp-for="CityId" class="form-control" asp-items="ViewBag.Cities" id="CityId">
            <option value="">-- Select City --</option>
        </select>
        <span asp-validation-for="CityId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Salary"></label>
        <input asp-for="Salary" class="form-control" />
        <span asp-validation-for="Salary" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Vehicle"></label>
        <select asp-for="Vehicle" class="form-control">
            <option value="">-- Select Vehicle --</option>
            <option value="Car">Car</option>
            <option value="Bike">Bike</option>
        </select>
        <span asp-validation-for="Vehicle" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="VehicleNumber"></label>
        <input asp-for="VehicleNumber" class="form-control" />
        <span asp-validation-for="VehicleNumber" class="text-danger"></span>
    </div>

    <input type="hidden" asp-for="EmployeeId" />
    <div class="form-group mt-2 text-end">
        <button type="submit" class="btn btn-success">Save</button>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            // server-provided flag
            var cityHasItems = @((cityHasItems) ? "true" : "false");

            // set initial disabled state based on server-provided cities
            $('#CityId').prop('disabled', cityHasItems === "false");

            $('#CountryId').change(function () {
                var countryId = $(this).val();
                var $city = $('#CityId');
                $city.empty();

                if (!countryId) {
                    $city.append('<option value="">-- Select City --</option>');
                    $city.prop('disabled', true);
                    return;
                }

                $.getJSON('/Cities/GetCitiesByCountry', { countryId: countryId }, function (data) {
                    if (data && data.length > 0) {
                        $city.append('<option value="">-- Select City --</option>');
                        $.each(data, function (i, city) {
                            $city.append($('<option>', {
                                value: city.cityId,
                                text: city.cityName
                            }));
                        });
                        $city.prop('disabled', false);
                    } else {
                        $city.append('<option value="">No cities present</option>');
                        $city.prop('disabled', true);
                    }
                }).fail(function () {
                    $city.append('<option value="">No cities present</option>');
                    $city.prop('disabled', true);
                });
            });

            // If there's an initial country but empty cities, trigger change to attempt load
            if ($('#CountryId').val() && !cityHasItems) {
                $('#CountryId').trigger('change');
            }
        });
    </script>
}
