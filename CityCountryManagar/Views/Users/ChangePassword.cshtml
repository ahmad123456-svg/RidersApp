@model RidersApp.ViewModels.ChangePasswordVM
@{
    Layout = null;
}

<form asp-action="ChangePassword" asp-controller="Users" method="post" onsubmit="return ajaxFormSubmit(this);" autocomplete="off">
    @Html.AntiForgeryToken()
    
    <div class="alert alert-info" role="alert">
        <i class="fas fa-user-lock"></i> 
        <strong>Change Password for:</strong> @Model.FullName (@Model.Email)
    </div>
    
    <div class="form-group">
        <label asp-for="CurrentPassword"></label>
        <input asp-for="CurrentPassword" class="form-control" type="password" 
               autocomplete="current-password" 
               placeholder="Enter your current password" />
        <span asp-validation-for="CurrentPassword" class="text-danger"></span>
        <small class="form-text text-muted">
            Enter your current password to verify your identity.
        </small>
    </div>

    <div class="form-group">
        <label asp-for="NewPassword"></label>
        <input asp-for="NewPassword" class="form-control" type="password" 
               autocomplete="new-password" 
               placeholder="Enter new password (minimum 8 characters)" />
        <span asp-validation-for="NewPassword" class="text-danger"></span>
        <small class="form-text text-muted">
            <strong>Password Requirements:</strong> Minimum 8 characters.
        </small>
    </div>

    <div class="form-group">
        <label asp-for="ConfirmPassword"></label>
        <input asp-for="ConfirmPassword" class="form-control" type="password" 
               autocomplete="new-password" 
               placeholder="Confirm the new password" />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        <small class="form-text text-muted">
            Re-enter the new password to confirm it matches.
        </small>
    </div>

    <div class="form-group mt-3 text-end">
        <button type="submit" class="btn btn-primary">
            <i class="fas fa-key"></i> Change Password
        </button>
        <button type="button" class="btn btn-secondary" onclick="$('#form-modal').modal('hide');">
            <i class="fas fa-times"></i> Cancel
        </button>
    </div>
</form>

<script>
    $(document).ready(function() {
        var currentPasswordField = $('input[name="CurrentPassword"]');
        var newPasswordField = $('input[name="NewPassword"]');
        var confirmPasswordField = $('input[name="ConfirmPassword"]');
        
        console.log('Change Password form loaded');
        
        // Real-time password confirmation validation
        function validatePasswordMatch() {
            var newPassword = newPasswordField.val();
            var confirmPassword = confirmPasswordField.val();
            
            if (confirmPassword.length > 0) {
                if (newPassword === confirmPassword) {
                    confirmPasswordField.removeClass('is-invalid').addClass('is-valid');
                    confirmPasswordField.next('.text-danger').text('');
                } else {
                    confirmPasswordField.removeClass('is-valid').addClass('is-invalid');
                    confirmPasswordField.next('.text-danger').text('Passwords do not match.');
                }
            } else {
                confirmPasswordField.removeClass('is-valid is-invalid');
                confirmPasswordField.next('.text-danger').text('');
            }
        }
        
        // Validate that new password is different from current password
        function validatePasswordDifferent() {
            var currentPassword = currentPasswordField.val();
            var newPassword = newPasswordField.val();
            
            if (currentPassword.length > 0 && newPassword.length > 0) {
                if (currentPassword === newPassword) {
                    newPasswordField.removeClass('is-valid').addClass('is-invalid');
                    newPasswordField.next('.text-danger').text('New password must be different from current password.');
                } else {
                    newPasswordField.removeClass('is-invalid').addClass('is-valid');
                    newPasswordField.next('.text-danger').text('');
                }
            } else {
                newPasswordField.removeClass('is-valid is-invalid');
                newPasswordField.next('.text-danger').text('');
            }
        }
        
        currentPasswordField.on('input', validatePasswordDifferent);
        newPasswordField.on('input', function() {
            validatePasswordDifferent();
            validatePasswordMatch();
        });
        confirmPasswordField.on('input', validatePasswordMatch);
    });
</script>